apiVersion: v1
kind: Service
metadata:
  name: flask-demo
spec:
  type: NodePort
  selector:
    app: flask-demo
  ports:
    - port: 80
      targetPort: 5000
      nodePort: 30081
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: flask-demo-app
data:
  app.py: |
    from flask import Flask
    import socket
    import os
    app = Flask(__name__)
    @app.route("/")
    def hello():
        return f"ðŸ‘‹ Hello from pod: {socket.gethostname()} on node: {os.getenv('MY_NODE_NAME', 'unknown')}"
    if __name__ == "__main__":
        app.run(host="0.0.0.0", port=5000)
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-demo
  template:
    metadata:
      labels:
        app: flask-demo
    spec:
      containers:
        - name: flask-demo
          image: python:3.8-slim
          command: ["python", "/app/app.py"]
          env:
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: app-volume
              mountPath: /app
      volumes:
        - name: app-volume
          configMap:
            name: flask-demo-app
